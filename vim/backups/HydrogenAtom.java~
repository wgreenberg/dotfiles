public class HydrogenAtom implements Runnable {

	private ChemicalBondingCreator cbc;
	private int count;
  Thread generatorThread;

	public HydrogenAtom(ChemicalBondingCreator cbc, int count, Thread genThread) {
		this.cbc = cbc;
		this.count = count;
    this.generatorThread = genThread;
	}

	@Override
	public void run() {
		System.out.println("Hydrogen atom no: " + count + " created.");
    try{
      synchronized (cbc.haMutex) {
        cbc.haMutex.acquire();
        cbc.haList.add(this);
        cbc.haMutex.release();
      }
    } catch (Exception e){
      System.out.println(e);
    }

		System.out.println("Hydrogen atom no: " + count
				+ " waiting for bonding.");
    if(cbc.bondReady()){
      this.generatorThread = new Thread(this.cbc);
      this.generatorThread.start();
    }
		try {
			synchronized (cbc.haWaiton) {
				cbc.haWaiton.acquire(1);
        synchronized (cbc.haMutex) {
          cbc.haMutex.acquire();
          cbc.haList.remove(this);
          cbc.haMutex.release();
        }
			}
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("Hydrogen atom no: " + count + " bonded, done.");
	}

}
