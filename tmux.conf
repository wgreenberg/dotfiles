# Rebind action key
set-option -g prefix C-a

# set zsh as default
set-option -g default-shell /bin/zsh

# Bind vi keys
set-option -g mode-keys vi

# Bind vi copy keys
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe "xclip -i -sel clipboard"

# Double control-a to switch between current and last window.
bind-key C-a last-window

# Rebind close window
bind q confirm kill-window

# Control-s to switch between current and last pane.
bind-key C-s last-pane

# New window should open in the same dir as current pane
bind c new-window -c "#{pane_current_path}"

# Rebind pane splitting
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind \ split-window -v -c "#{pane_current_path}"

# Rebind = to go pane-fullscreen
unbind =
bind = resize-pane -Z

# Rebind - to do some weird shit for vimux:
#   IF you are not fullscreened, go to the bottom pane and fullscreen
#   ELSE go to the top pane (thus canceling fullscreen)
unbind -
bind - if "echo `tmux lsw -F '#{window_flags}'` | grep -q 'Z'" "select-pane -t 0" "select-pane -t 1; resize-pane -Z"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Configure terminal to use 256 colors
set -g default-terminal "screen-256color"

# Vim-style pane navigation
bind h select-pane -L # Select the pane to the left
bind j select-pane -D # Select the pane below
bind k select-pane -U # Select the pane above
bind l select-pane -R # Select the pane to the right

bind C-h resize-pane -L
bind C-j resize-pane -D
bind C-k resize-pane -U
bind C-l resize-pane -R

# Don't automatically rename windows
set -g automatic-rename off
